{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Jhurgen\\\\Desktop\\\\Repositories\\\\React-Platzi\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Jhurgen\\\\Desktop\\\\Repositories\\\\React-Platzi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jhurgen\\\\Desktop\\\\Repositories\\\\React-Platzi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jhurgen\\\\Desktop\\\\Repositories\\\\React-Platzi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jhurgen\\\\Desktop\\\\Repositories\\\\React-Platzi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jhurgen\\\\Desktop\\\\Repositories\\\\React-Platzi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jhurgen\\\\Desktop\\\\Repositories\\\\React-Platzi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jhurgen\\\\Desktop\\\\Repositories\\\\React-Platzi\\\\src\\\\pages\\\\Badges.js\";\nimport React from \"react\";\nimport \"./styles/Badges.css\";\nimport confLogo from \"../images/badge-header.SVG\";\nimport BadgesList from \"../components/BadgesList\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../src/api\";\nimport PageLoading from \"../components/PageLoading\";\nimport PageError from '';\n\nvar Badges =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Badges, _React$Component);\n\n  function Badges(props) {\n    var _this;\n\n    _classCallCheck(this, Badges);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Badges).call(this, props));\n    _this.fetchData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                error: null\n              });\n\n              _context.prev = 1;\n              _context.next = 4;\n              return api.badges.list();\n\n            case 4:\n              data = _context.sent;\n\n              _this.setState({\n                loading: false,\n                data: data\n              });\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n\n              _this.setState({\n                loading: false,\n                error: _context.t0\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n    console.log(\"1. constructor()\");\n    _this.state = {\n      loading: true,\n      error: null,\n      data: undefined\n    };\n    return _this;\n  }\n\n  _createClass(Badges, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"3. componentDidMount()\");\n      this.fetchData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      console.log(\"5. componentDidUpdate\");\n      console.log({\n        prevProps: prevProps,\n        prevState: prevState\n      });\n      console.log({\n        props: this.props,\n        state: this.state\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log(\"6. componentWillUnmount\"); // clearTimeout(this.timeoutId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"2/4. render()\");\n\n      if (this.state.loading === true) {\n        return React.createElement(PageLoading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.error) {\n        return React.createElement(PageError, {\n          error: this.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges__hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"Badges_conf-logo\",\n        src: confLogo,\n        alt: \"Conf Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"Badges__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges__buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"btn btn-primary\",\n        to: \"/badges/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"New Badge\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(BadgesList, {\n        badges: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Badges;\n}(React.Component);\n\nexport default Badges;","map":{"version":3,"sources":["C:\\Users\\Jhurgen\\Desktop\\Repositories\\React-Platzi\\src\\pages\\Badges.js"],"names":["React","confLogo","BadgesList","Link","api","PageLoading","PageError","Badges","props","fetchData","setState","loading","error","badges","list","data","console","log","state","undefined","prevProps","prevState","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./styles/Badges.css\";\r\nimport confLogo from \"../images/badge-header.SVG\";\r\nimport BadgesList from \"../components/BadgesList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport api from \"../../src/api\";\r\nimport PageLoading from \"../components/PageLoading\";\r\nimport PageError from ''\r\n\r\nclass Badges extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"1. constructor()\");\r\n    this.state = {\r\n      loading: true,\r\n      error: null,\r\n      data: undefined\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"3. componentDidMount()\");\r\n\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData = async () => {\r\n    this.setState({ loading: true, error: null });\r\n\r\n    try {\r\n      const data = await api.badges.list();\r\n      this.setState({ loading: false, data: data });\r\n    } catch (error) {\r\n      this.setState({ loading: false, error: error });\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"5. componentDidUpdate\");\r\n    console.log({\r\n      prevProps: prevProps,\r\n      prevState: prevState\r\n    });\r\n\r\n    console.log({\r\n      props: this.props,\r\n      state: this.state\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"6. componentWillUnmount\");\r\n\r\n    // clearTimeout(this.timeoutId);\r\n  }\r\n\r\n  render() {\r\n    console.log(\"2/4. render()\");\r\n\r\n    if (this.state.loading === true) {\r\n      return <PageLoading />;\r\n    }\r\n    if (this.state.error) {\r\n      return <PageError error={this.state.error} />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"Badges\">\r\n          <div className=\"Badges__hero\">\r\n            <div className=\"Badges__container\">\r\n              <img\r\n                className=\"Badges_conf-logo\"\r\n                src={confLogo}\r\n                alt=\"Conf Logo\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"Badges__container\">\r\n          <div className=\"Badges__buttons\">\r\n            <Link className=\"btn btn-primary\" to=\"/badges/new\">\r\n              New Badge\r\n            </Link>\r\n          </div>\r\n\r\n          <div>\r\n            <div className=\"Badges__container\">\r\n              <BadgesList badges={this.state.data} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Badges;\r\n"]},"metadata":{},"sourceType":"module"}